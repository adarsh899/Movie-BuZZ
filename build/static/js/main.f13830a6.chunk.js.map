{"version":3,"sources":["components/SearchMovie.jsx","components/Navigation.jsx","components/FavoriteButton.jsx","components/Card.jsx","components/Home.jsx","components/CheckboxButton.jsx","components/Discover.jsx","components/About.jsx","components/RatingStars.jsx","components/Movie.jsx","components/Favorites.jsx","components/Ratings.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["SearchMovie","props","useState","query","setQuery","search","setSearch","redirect","setRedirect","useEffect","getValue","className","onSubmit","e","preventDefault","id","type","placeholder","aria-label","name","value","onChange","event","target","to","pathname","Navigation","getMovies","movies","clearSearch","htmlFor","onClick","FavoriteButton","JSON","parse","localStorage","getItem","favorites","indexOf","heart","setHeart","icon","faHeartSolid","color","faHeartRegular","Card","getFavorites","cards","map","movie","key","poster_path","src","alt","title","Moment","release_date","format","vote_average","overview","substring","href","Home","URLSearchParams","useLocation","setMovies","loading","setLoading","useParams","list","fetchMovies","getSearch","a","async","url","get","axios","response","data","results","slice","console","log","length","Checkbox","checkbox","setCheckbox","checked","setChecked","fetchGenres","genres","setupChecked","getIds","box","tempChecked","forEach","push","index","getChecked","handleCheckbox","Discover","yearOptions","setYearOptions","sortByOptions","setSortByOptions","year","setYear","sortBy","setSortBy","setGenres","setCheckedArray","lenghtOfTheArray","sortByOptionsDisplay","handleSelect","Object","entries","sortByDisplay","label","years","now","Date","getFullYear","i","array","tempCheckedArray","Ids","selected","options","About","RatingStars","rating","stars","setStars","getStarsArray","starsArray","setStarsArray","NumberOfStars","tempStars","temp","getStars","handleClick","star","faStarSolid","faStarRegular","Movie","setMovie","rated","displayrating","setDisplayRating","fetch","json","then","getMovie","budget","displayType","thousandSeparator","prefix","tagline","ratings","Favorites","favorite","Ratings","keys","App","setFavorites","setRated","filter","storeStars","tempObject","setItem","stringify","rel","path","component","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f13830a6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {Redirect} from \"react-router\"\nimport \"./App.css\"\nimport \"../styles/bootstrap.min.css\"\n\nfunction SearchMovie(props){\n\n    const [query, setQuery] = useState(\"\")\n    const [search, setSearch] = useState(\"\")\n    const [redirect, setRedirect] = useState(false)\n\n\n    useEffect(() => {\n        const handleSearch = () =>{\n            props.getValue(search)\n        };\n        handleSearch();\n    }, [search])\n\n    const handleQuery = (event) =>{\n            setQuery(event.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        setRedirect(true)\n        setSearch(query)\n        props.getValue(search)\n        setQuery(\"\")\n    }\n\n    return(\n        <form className=\"form-inline flex-nowrap\" onSubmit={handleSubmit}>\n            <input id=\"input\" className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Movie\" \n            aria-label=\"Search\" name=\"search\" value={query} onChange={handleQuery}/>\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" value=\"submit\" >Search</button>\n            {redirect && <Redirect to={{pathname: '/search', search: `?search=${search}`}} />}\n        </form>\n    )\n}\n\nexport default SearchMovie","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport SearchMovie from \"./SearchMovie\"\n\nfunction Navigation(props){\n\n    function getMovies(movies){\n        props.getValue(movies)\n    }\n\n    function clearSearch(){\n        getMovies(\"\")\n    }\n\n    return(\n        <div>\n            <nav className=\"navbar navbar-light fixed-top flex-row-reverse bg-dark\">\n            <label htmlFor=\"btn-menu\">&#9776;</label>\n                <SearchMovie getValue={getMovies}/>\n            </nav>\n            <input type=\"checkbox\" id=\"btn-menu\"/>\n            <nav className=\"navbar\">                         \n                <ul className=\"nav-links\">\n                    <Link to=\"/popular\" onClick={clearSearch}><li>Popular</li></Link>\n                    <Link to=\"/top_rated\" onClick={clearSearch}><li>Top Rated</li></Link>\n                    <Link to=\"/now_playing\" onClick={clearSearch}><li>Now Playing</li></Link>\n                    <Link to=\"/upcoming\" onClick={clearSearch}><li>Upcoming Movies</li></Link>\n                    <Link to=\"/about\" ><li>About</li></Link>                        \n                    <Link to=\"/discover\"><li>Discover</li></Link>\n                    <Link to=\"/favorites\"><li>Favorites</li></Link>\n                    <Link to=\"/ratings\"><li>My Rated Movies</li></Link>                                     \n                                     \n                </ul>\n            </nav>\n        </div>        \n    )\n}\n\nexport default Navigation","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as faHeartSolid} from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as faHeartRegular } from '@fortawesome/free-regular-svg-icons';\n\nfunction FavoriteButton (props) {\n   \n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')) || [])\n    const [heart, setHeart] = useState((favorites.indexOf(props.id) !== -1))\n \n    function handleClick () {\n       \n        if(heart){\n            setHeart(false)\n            props.getValue(-props.id)\n        }\n        else{\n            setHeart(true)\n            props.getValue(props.id)\n        }\n    }\n\n    return (\n    <li>      \n        <button onClick={() => handleClick()} >\n            {(heart) \n                ?\n                 (<FontAwesomeIcon icon={faHeartSolid} color=\"white\" />) \n                 : \n                 (<FontAwesomeIcon icon={faHeartRegular} color=\"white\" />)\n            }\n        </button>\n   </li>\n    )\n}\n\nexport default FavoriteButton\n","import React, { useState, useEffect } from \"react\"\nimport Moment from \"moment\"\nimport \"./App.css\"\nimport \"../styles/bootstrap.min.css\"\nimport FavoriteButton from './FavoriteButton'\n\nfunction Card(props){\n\n    function getFavorites (favorites) {\n        props.getValue(favorites)        \n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                    {props.cards.map(movie => (\n                       <div className=\"col-xl-4 col-lg-6\" key = {movie.id}>\n                            <div className=\"card mb-4 movie\">\n                                { (movie.poster_path == null) ? (<img src=\"https://www.nyfa.edu/student-resources/wp-content/uploads/2015/03/Blank-Movie-Poster1.jpg\" alt=\"generic image\" />)\n                                : (<img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />) }\n                                <div className=\"card-body\">\n                                    <div className=\"date\">\n                                        <span>{Moment(movie.release_date).format('MMM d YYYY')}</span>\n                                    </div>\n                                    <ul className=\"menu-content\">\n                                        <FavoriteButton getValue={getFavorites} id={movie.id} />\n                                        <li><span>{movie.vote_average} / 10</span></li>\n                                    </ul>\n                                    </div>\n                                    <div className=\"card-text text-center\">\n                                        <div className=\"content\">\n                                            <h3 className=\"text-center\">{movie.title}</h3>\n                                            <p className=\"text\">{movie.overview.substring(0, 120) + \"...\"}</p>\n                                            <a href={`/movie/${movie.id}`} className=\"badge badge-pill badge-info m-3\">Read more</a>\n                                        </div>\n                                    </div>\n                                </div>\n                        </div> \n                    ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React, { useState, useEffect } from \"react\"\nimport {useParams} from \"react-router\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport \"../styles/bootstrap.min.css\"\nimport { useLocation } from \"react-router-dom\";\nimport Card from \"./Card\"\nimport \"./Loader.css\"\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\nfunction Home(props){\n\n    let query = useQuery();\n    const [movies, setMovies] = useState([])\n    const [loading, setLoading] = useState(true)\n    let {list, search} = useParams()\n\n    list = list || 'popular'\n    const apiKey = \"47c4adc75b16f23db3cf78e4870a4296\"\n\n    useEffect(() => {fetchMovies()}, !props.getSearch ? [list] : [props.getSearch])\n\n    const fetchMovies = async () => {\n        let url\n\n        url = `https://api.themoviedb.org/3/movie/${list}?api_key=${apiKey}`\n        try{\n            if(props.getSearch || query.get(\"search\")){\n                url = `https://api.themoviedb.org/3/search/movie?api_key=47c4adc75b16f23db3cf78e4870a4296&query=${props.getSearch || query.get(\"search\")}`            \n            }\n            \n            const response = await axios.get(url)\n            setMovies(response.data.results.slice(0,12))\n            setLoading(false)\n        }catch(e){\n            console.log(e)\n        }        \n    }\n\n    function getFavorites (favorites) {\n        props.getValue(favorites)        \n    }\n\n    return(\n        <div className=\"main-container black\">\n            {loading ? (<div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>)\n                :\n                (\n                    (movies.length !== 0) ? <Card cards={movies} getValue={getFavorites}/> \n                    : \n                    <h2 className=\"text-center display-message\">Sorry!!! There were no results for your search</h2>\n                )\n            }              \n        </div>\n    )\n}\n\nexport default Home","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport \"../styles/bootstrap.min.css\"\n\n\nfunction Checkbox(props){\n\n    const [checkbox, setCheckbox] = useState([])\n    const apiKey = \"47c4adc75b16f23db3cf78e4870a4296\"\n    const [checked, setChecked] = useState([])\n\n    useEffect(() => {\n        fetchGenres()\n    }, [])\n\n    const fetchGenres = async () =>{\n        const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`\n        const response = await axios.get(url);\n        setCheckbox(response.data.genres)\n        setupChecked(response.data.genres)\n        props.getIds(response.data.genres.map((box) => (box.id)))\n    }\n\n    function setupChecked(list){\n        let tempChecked = []\n        list.forEach(() => tempChecked.push(false))\n        setChecked(tempChecked)\n    }\n\n    const handleCheckbox = (event, index) => {\n        let tempChecked = checked\n        tempChecked[index] = event.target.checked\n        setChecked(tempChecked)\n        props.getChecked(checked)\n    }\n\n\n    return(\n        <div className=\"genres\">\n            {checkbox.map((box, index) => (\n                <p className=\"checkbox\" key={box.id}><input id={box.id} type=\"checkbox\" onChange={(e) => {handleCheckbox(e, index)}}/> {box.name}</p>\n            ))\n            }\n        </div>\n    )\n}\n\n\nexport default Checkbox","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport \"../styles/bootstrap.min.css\"\nimport Select from \"react-select\";\nimport Checkbox from \"./CheckboxButton\"\nimport Card from \"./Card\"\n\nfunction Discover(props){\n\n    \n    const [yearOptions, setYearOptions] = useState([])\n    const [sortByOptions, setSortByOptions] = useState([])\n    const [year, setYear] = useState({})\n    const [sortBy, setSortBy] = useState(\"\")\n    const [movies, setMovies] = useState([])\n    const [genres, setGenres] = useState([])\n    const [checked, setChecked] = useState(\"\")\n    const [checkedArray, setCheckedArray] = useState([])\n    const [loading, setLoading] = useState(true)\n    const apiKey = \"47c4adc75b16f23db3cf78e4870a4296\"\n\n\n    useEffect(() => {lenghtOfTheArray()}, [])\n    useEffect(() => {sortByOptionsDisplay()}, [])\n    useEffect(() => {handleSelect()}, [checked, year, sortBy])\n\n    const handleSelect = async () =>{\n        \n        let query\n\n        try{\n            if(checked != \"\" || Object.entries(year).length !== 0 || sortBy != \"\"){\n\n                if(checked != \"\" && Object.entries(year).length !== 0 && sortBy != \"\"){\n\n                    query = `&primary_release_year=${year.id}&with_genres=${checked}&sort_by=${sortBy.value}`\n\n                } else if(checked != \"\" && Object.entries(year).length !== 0){\n\n                    query = `&primary_release_year=${year.id}&with_genres=${checked}`\n\n                }else if(checked != \"\" && sortBy != \"\"){\n\n                    query = `&with_genres=${checked}&sort_by=${sortBy.value}`\n\n                }else if(Object.entries(year).length !== 0 && sortBy != \"\"){\n\n                    query = `&primary_release_year=${year.id}&sort_by=${sortBy.value}`\n\n                }else if(checked != \"\"){\n\n                    query = `&with_genres=${checked}`\n\n                }else if(Object.entries(year).length !== 0){\n\n                    query = `&primary_release_year=${year.id}`\n\n                }else if (sortBy != \"\"){\n\n                    query = `&sort_by=${sortBy.value}`\n\n                }\n\n                const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey + query}`\n                const response = await axios.get(url);\n                setMovies(response.data.results.slice(0,12))\n                setLoading(false)\n            } \n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const handleSelectYear = async (selected) => {\n        setYear(selected);\n    }\n\n    const handleSortBy = async (selected) => {\n        setSortBy(selected);\n    }\n\n    const sortByOptionsDisplay = async () =>{\n        const sortByDisplay = []\n\n        sortByDisplay.push(\n            {\n                label: \"Release date ascending\",\n                id: 0,\n                value: \"release_date.asc\"\n            },\n            {\n                label: \"Release date descending\",\n                id: 1,\n                value: \"release_date.desc\"\n            },\n            {\n                label: \"Title (A-Z)\",\n                id: 2,\n                value: \"original_title.asc\"\n            },\n            {\n                label: \"Title (Z-A)\",\n                id: 3,\n                value: \"original_title.desc\"\n            },\n            {\n                label: \"Rating Ascending\",\n                id: 4,\n                value: \"vote_average.asc\"\n            },\n            {\n                label: \"Rating Descending\",\n                id: 5,\n                value: \"vote_average.desc\"\n            }\n        )\n        setSortByOptions(sortByDisplay)\n    }\n\n    const lenghtOfTheArray = async () => {\n        const years = []\n        let now = new Date()\n        now = now.getFullYear()\n\n        years.push({\n            label: \"None\",\n            id: \"\"\n        })\n\n        for (var i = now; i >= 1920; i--){\n            years.push({\n                label: i,\n                id: i\n            })\n        }        \n        setYearOptions(years)\n    }\n\n    function getFavorites (favorites) {\n        props.getValue(favorites)        \n    }\n\n    function getChecked (array){\n        let tempChecked = \"\"\n        let tempCheckedArray = []\n        \n        array.forEach((box, index) => {\n            if(box){\n                if(tempChecked == \"\"){\n                    tempChecked = genres[index]\n                }\n                else{\n                    tempChecked = tempChecked + \",\" + genres[index]\n                }\n                tempCheckedArray.push(genres[index])\n            }\n        })\n        setChecked(tempChecked)\n        console.log(tempCheckedArray)\n        setCheckedArray(tempCheckedArray)\n    }\n\n    function getIds(Ids){\n        setGenres(Ids)\n    }\n\n    return(\n        <div className=\"main-container black\">\n            <div className=\"discover-main-menu\">\n                    <Checkbox getChecked={getChecked} getIds={getIds}/> \n                <div className=\"discover-menu\">\n                    <div className=\"years\">\n                        <p className=\"label\">Year</p>            \n                        <Select onChange={handleSelectYear} options={yearOptions} />\n                    </div>\n                    <div className=\"sort-by\">\n                        <p className=\"label\">Sort</p>            \n                        <Select onChange={handleSortBy} options={sortByOptions} />\n                    </div>\n                </div> \n            </div>\n            {loading ? (<h2 className=\"text-center\">Please Select an Option</h2>)\n                :\n                (\n                    (movies.length !== 0) ? <Card cards={movies} getValue={getFavorites}/> \n                    : \n                    (<h2 className=\"text-center\">No results found</h2>)\n                )\n            }             \n        </div>\n    )\n}\n\nexport default Discover","import React from \"react\"\n\nfunction About(){\n    return(\n        <div className=\"About\">\n        <h1 className=\"About-heading\">About Page</h1>\n        <h3>This page was designed and built by Fausto Gomez and Lucas Johnson. To access the movies we used The Movie Database. This product uses the TMDb API but is not endorsed or certified by TMDb.</h3>\n        <img src=\"https://www.themoviedb.org/assets/2/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg\" alt=\"The Movie Database logo\"/>\n        </div>\n    )\n}\n\nexport default About","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar as faStarSolid} from '@fortawesome/free-solid-svg-icons'\nimport { faStar as faStarRegular } from '@fortawesome/free-regular-svg-icons';\n\nfunction RatingStars (props) {\n    \n    const [stars, setStars] = useState(props.rating || 0)\n    const [starsArray, setStarsArray] = useState(getStarsArray(stars))\n\n    useEffect(() => {    getStarsArray(stars)\n        props.getStars(stars, props.id)}, [stars])\n\n    function handleClick () {\n        let temp = stars\n        if(temp >= 5){\n            setStars(0)\n            temp = 0\n        }\n        else{\n            temp++\n            setStars(temp)\n        }\n        setStarsArray(getStarsArray(temp))\n        props.getStars(stars, props.id)\n    }\n\n    function getStarsArray(NumberOfStars){\n\n        let tempStars = []\n        while(NumberOfStars > 0){\n            tempStars.push(true)\n            NumberOfStars--\n        }\n        let temp = 5 - tempStars.length\n        while(temp > 0){\n            tempStars.push(false)\n            temp--\n        }\n        return tempStars\n    }\n\n    function unrate(){\n        props.getStars(stars, -props.id)\n        getStarsArray(0)\n    }\n\n    return (\n    <div>\n        <button className=\"Rating\" onClick={() => handleClick()} >\n            {starsArray.map( (star, index) => {return (star) ? \n                 <FontAwesomeIcon key={index} icon={faStarSolid} color=\"black\" />\n                 :\n                 <FontAwesomeIcon key={index} icon={faStarRegular} color=\"black\" />\n            })}\n        </button>\n        <button className=\"Rating\" onClick={unrate}>Unrate</button>\n   </div>\n    )\n}\n\nexport default RatingStars\n","import React, { useEffect, useState } from 'react'\nimport {useParams} from \"react-router\"\nimport '../styles/bootstrap.min.css'\nimport './App.css'\nimport Moment from 'moment'\nimport FavoriteButton from './FavoriteButton'\nimport RatingStars from './RatingStars'\nimport NumberFormat from 'react-number-format'\n\nexport function Movie(props){\n    const [movie, setMovie] = useState({})\n    let {id} = useParams()\n    const rated = (JSON.parse(localStorage.getItem('StarObject')) || {})\n    const [displayrating, setDisplayRating] = useState(rated[id] || false)\n\n    useEffect(() => {\n        async function getMovie(id){\n            const data = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=47c4adc75b16f23db3cf78e4870a4296&language=en-US`)\n            data.json().then(function(value) {\n                setMovie(value); \n            })            \n        };\n        getMovie(id);\n      }, [props])\n\n    function getStars (stars, id){\n        props.getStars(stars, id)\n        if(id < 0){\n            setDisplayRating(false)\n        }\n    }\n\n    function getFavorites (favorites) {\n        props.getValue(favorites)\n    }\n\n    function handleClick () {\n        setDisplayRating(true)\n    }\n\n\n    return (\n        <div className=\"container mt-4\">\n        <div className=\"row ml-auto mr-auto\">\n            <div className=\"col align-self-right\">\n        <div className=\"card\"> \n            <img className=\"card-img-top movie\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title}/>\n            <div className=\"card-body\">\n                <div className=\"row date info\">\n                    <span className=\"col\">Release Date: {Moment(movie.release_date).format('MMM d YYYY')}</span>\n                    <span className=\"col\">Budget: <NumberFormat value={movie.budget} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span>\n                    <span className=\"col\">{movie.tagline}</span>\n                </div>\n                <ul className=\"menu-content\">\n                    <FavoriteButton getValue={getFavorites} id={id} />\n                    <li><a href=\"#\" className=\"fa fa-heart-o\"><span>{movie.vote_average}</span></a></li>\n                </ul>\n            </div>\n            {displayrating && (\n                <RatingStars id={id} getStars={getStars} rating={props.ratings[id]} />\n            )}\n            <div className=\"movie-text card-text\">\n                <div className=\"content\">\n                    <p className=\"text\">{movie.overview}</p>\n                </div>\n             </div>\n             <div className=\"text-center\">\n                {!displayrating && (\n                <button className=\"rate-button badge badge-pill badge-info m-3\" onClick={() => handleClick()}>Rate</button>\n                )}\n             </div>            \n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport Moment from \"moment\"\nimport FavoriteButton from './FavoriteButton'\nimport './App.css'\nimport { array, object } from 'prop-types'\nimport Card from \"./Card\"\n\nfunction Favorites (props){\n\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n        createMoviesArray()\n      }, [])\n\n    function createMoviesArray(){\n            props.movies.forEach(id => {\n                getMovie(id)\n            });\n\n    }\n\n    async function getMovie(id){\n        const data = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=47c4adc75b16f23db3cf78e4870a4296&language=en-US`)\n        try{\n            data.json().then(function(value) {    \n            setMovies(movies => [...movies, value])\n            })\n        }catch(e){\n            console.log(e)\n        }\n      }\n\n    function getFavorites(favorite){\n        props.getValue(favorite)\n    }\n\n    return (\n        <div className=\"main-container black\">\n            {(movies.length !== 0) ? <Card cards={movies} getValue={getFavorites}/> \n            : \n            <h2 className=\"text-center display-message\">Sorry you have no favourited movies. Search for a movie to add to your favourites.</h2>} \n        </div>\n    )\n}\n\nexport default Favorites;","import React, { useState, useEffect } from 'react'\nimport FavoriteButton from './FavoriteButton'\nimport RatingStars from './RatingStars'\nimport './App.css'\nimport '../styles/bootstrap.min.css'\nimport Moment from 'moment'\n\nfunction Ratings(props) {\n    const [movies, setMovies] = useState([])\n\n\n    useEffect(() => {\n        createMoviesArray()\n      }, [props.movies])\n\n    function createMoviesArray(){\n            Object.keys(props.movies).forEach(function (id, stars) {getMovie(id)});\n    }\n\n    async function getMovie(id){\n        const data = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=47c4adc75b16f23db3cf78e4870a4296&language=en-US`)\n        console.log(id)\n        data.json().then(function(value) {    \n        setMovies(movies => [...movies, value])\n          })\n        console.log(movies)\n      }\n\n    function getFavorites(favorite){\n        props.getValue(favorite)\n    }\n\n    function getStars (stars, id){\n        props.getStars(stars, id)\n    }\n\n    return (\n        <div className=\"main-container black\">\n        <div className=\"container\">\n        <div className=\"d-lg-flex flex-wrap justify-content-end\">\n            {(movies.length !== 0) ? \n                movies.map(movie => (\n                    <div className=\"col ml-auto\" key = {movie.id}>\n                        <div className=\"card mb-4  movie\">\n            <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title}/>\n            <div className=\"card-body\">\n                <div className=\"row date info\">\n                    <span className=\"col\">{Moment(movie.release_date).format('MMM d YYYY')}</span>\n                    <span className=\"col\"><RatingStars id={movie.id} getStars={getStars} rating={props.movies[movie.id]} /></span>\n                </div>\n                <ul className=\"menu-content\">\n                    <FavoriteButton getValue={getFavorites} id={movie.id} />\n                    <li><a href=\"#\" className=\"fa fa-heart-o\"><span>{movie.vote_average}</span></a></li>\n                </ul>\n            </div>\n             <div className=\"card-text text-center\">\n                <div className=\"content\">\n                   <h3 className=\"text-center\">{movie.title}</h3>\n                    <p className=\"text\">{movie.overview.substring(0, 120) + \"...\"}</p>\n                    <a href={`/movie/${movie.id}`} className=\"badge badge-pill badge-info m-3\">Read more</a>\n                </div>\n            </div>\n        </div>\n        </div>\n                        ))                            \n                        :\n                            (<h2>Sorry you have no rated movies. Search for a movie to rate it.</h2>)\n                        }\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Ratings","import React, { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport Navigation from \"./Navigation\"\nimport Home from \"./Home\"\nimport Discover from \"./Discover\"\nimport About from \"./About\"\nimport { Movie } from './Movie'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Favorites from \"./Favorites\"\nimport Ratings from './Ratings'\n\nfunction App(){\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')) || [])\n    const [rated, setRated] = useState(JSON.parse(localStorage.getItem('StarObject')) || {})\n    const [search, setSearch] = useState(\"\")\n\n    useEffect(() => {localStorage.setItem('favorites', JSON.stringify(favorites)) \n}, [favorites])\n\n    useEffect(() => {\n        localStorage.setItem('StarObject', JSON.stringify(rated))\n    }, [rated])\n\n    function getFavorites(id) {\n        if(id > 0){\n            if(favorites.indexOf(id) === -1){\n                setFavorites([...favorites, id])\n            }\n        } else {\n            setFavorites(favorites.filter((value) => { return value !== -id}))\n        }\n    }\n\n    function storeStars(stars, id){\n        if(id > 0){\n            let tempObject = rated\n            tempObject[id] = stars\n            setRated(tempObject)\n        } else if(id < 0){\n            let tempObject = rated\n            delete tempObject[-id]\n            console.log(tempObject)\n        }\n        localStorage.setItem('StarObject', JSON.stringify(rated))\n    }\n\n    function getMovies(movie){\n        setSearch(movie)\n    }\n\n    return(\n        <Router>\n            <link href=\"https://fonts.googleapis.com/css?family=Montserrat&display=swap\" rel=\"stylesheet\" />            \n            <div className=\"App black\">\n            <Navigation getValue={getMovies}/>\n            <Switch>       \n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/discover\" >\n                    <Discover getValue={getFavorites} movies={rated} />\n                </Route>\n                <Route path=\"/movie/:id\" >\n                    <Movie getStars={storeStars} ratings={rated} />\n                </Route>\n                <Route path=\"/favorites\" >\n                    <Favorites movies={favorites} getValue={getFavorites} />\n                </Route>\n                <Route path=\"/ratings\">\n                    <Ratings movies={rated} getValue={getFavorites} getStars={storeStars} />\n                </Route>\n                <Route path=\"/:list\">\n                    <Home getValue={getFavorites} getSearch={search}/>\n                </Route> \n                <Route default >\n                    <Home getValue={getFavorites}/>\n                </Route>\n            </Switch>\n            </div>            \n        </Router>        \n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}